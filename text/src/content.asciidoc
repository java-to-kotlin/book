:sectnums:
:sectnumlevels: 2

[role="pagenumrestart"]

// Complete but for some late revision
include::chapters/01-intro.ad[]

[[part-1]]
[part]
== Individual Legs

// Complete
include::chapters/02-java-to-kotlin-projects.ad[]

// Complete
include::chapters/03-java-to-kotlin-classes.ad[]

// Complete
include::chapters/04-beans-to-values.ad[]

// Complete
include::chapters/05-java-to-kotlin-collections.ad[]

// Complete
include::chapters/06-optional-to-nullable.ad[]

// Complete
include::chapters/07-static-methods-to-top-level-functions.ad[]

// Complete
include::chapters/08-multi-to-single-expression-functions.ad[]

// Complete
include::chapters/09-functions-to-extension-functions.ad[]

// Complete: needs review
include::chapters/10-methods-to-properties.ad[]

// Complete
include::chapters/11-accumulating-objects-to-transformations.ad[]

// Complete but needs revision
include::chapters/12-encapsulated-collections-to-typealiases.ad[]

// Complete but for some revision
include::chapters/13-exceptions-to-errors.ad[]

// Complete but needs revision
include::chapters/14-actions-to-calculations.ad[]

// Complete: needs review
include::chapters/open-to-sealed-classes.ad[]

// Complete: needs review
include::chapters/immediate-to-gradual-translation.ad[]

// In progress
include::chapters/partial-to-total-functions.ad[]

// Lots written, lots to go
include::chapters/classes-to-closures.ad[]

[[part-2]]
[part]
== Whole Journeys

Your authors' first vision for this book was to introduce Kotlin by refactoring Java code.
Each chapter would refactor some Java until we were completely finished with the conversion, and we would introduce differences and techniques along the way.
In practice, it turned out to be very hard to create examples that brought things up in the right order.
In the spirit of learning from the process, we settled on a chapter per topic rather than a chapter per code sample.

This in turn inevitably led to our ending chapters before the code is sufficiently Kotlin, because the techniques necessary to finish the job haven't been introduced yet!
So here we are with another design decision - to finish the book with some chapters that apply all the techniques that we can bring to bear from <<part-1>>.

// Complete
include::chapters/bonus-refactoring.ad[]

// Complete needs review
include::chapters/bonus-error-handling.ad[]

[part]
== Chapters TODO

include::chapters/streams-to-sequences.ad[]

include::chapters/code-to-data.ad[]

include::chapters/explaining-variables-to-extension-functions.ad[]

include::chapters/duplicative-methods-to-strategy-parameters.ad[]

include::chapters/state-invariants-to-calculations.ad[]

include::chapters/builders-to-constants.ad[]

include::chapters/methods-to-extension-functions.ad[]

// May not make the cut
include::chapters/lazy-properties-to-lazy-sequences.ad[]

// May not make the cut
include::chapters/propagating-to-translating-errors.ad[]

// May not make the cut
include::chapters/validation-to-parsing.ad[]

// Other thoughts
// Statements to expressions?

