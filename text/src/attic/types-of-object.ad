= Types of Object

Objects should be Values, Entities or Services.

== Values

Values are values, their identity is dependent on the values of their properties. If you change a property, you have a different value.
Operations on values should be calculations.

== Entities

Entities have an identity independent of their values.
We can change their properties and still have the same entity.
We can look up an entity by the value of its id (zero or one results), or search by the value of one or more of its properties (zero to many results).
When we need to change the value of an entity's property, we favour making a copy with the new value, and should take the opportunity to consider the meaning of the change (eg actual name change, correction of naming error etc).
Operations on entities should be calculations.

== Services

Services manage state of entities - lookup, search, CRUD or other IO.
We usually access them through interfaces.
Operations on services are often actions.

== Other

Other types of objects are often disguising static functions - calculators, helpers, doers.
We seem them in Java because of lack of expressivity and recourse to mutation to solve problems - but they can often be removed in favour of calculations and pipelines.