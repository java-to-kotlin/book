[[organising-code-by-domain]]
[part]
== Organising the Code by Domain (To be folded in)

NOTE: This is an overview of the material extension functions that we want to refer to from later DSL chapters.  We'll have to turn this into chapters and refactoring examples.

NOTE: this part should also discuss compilation units and visibility rules, how Kotlin differs from Java, and how that is a better fit with how programmers work together in teams.

include::extensions-1-summary.ad[]

