= Writing Style

Capturing decisions about the writing style for the book.


== Who is the reader?

An experienced Java programmer. We can assume they know Java, common Java idioms (enterprisey Java, modern Java), and common APIs (JDK stdlib, JPA, Spring(?)). They are familiar with modern IDEs: so we don’t have to explain the code transformations that IntelliJ automates. (By modern IDE I mean tools that perform language-aware editing, not text editors like Sublime Text, VSCode, Visual Studio, vi, emacs, etc.)

Has spent most of their career using OO/procedural languages (Java, C#, etc). Knows OO patterns well. But also knows the Java streams API, and functional idioms for processing collections of immutable data.

Understands the basics of Kotlin syntax and the standard library where it is close to Java. But wants to learn how Kotlin differs from Java and the advantages those differences bring.

Wants to take advantage of Kotlin’s FP features

Is responsible for the large scale design of their Kotlin codebase, either in the architect or team lead role, or as a senior software engineer who is expected to take part in design decisions and lead by example to share knowledge & practice with less experienced team members.


== Conversational style

Write as if talking to the reader:

* Use the first person plural when describing refactoring, as if pairing with the reader.
* Use the first person singular when talking about our opinion or experience.
* Use the second person when talking about things the reader may have to do.


== Story time then theory

Story/Stories then theory (that summarises the stories)

A bit "business book-y", but much less dry than abstract theory followed by examples.

Let's avoid American style folksy touches of detail in the stories.


== Title levels

Each chapter title is a level one heading (e.g. preceded by a single `=`), so they can be treated as standalone documents if we wish.

The `book.ad` file is responsible for including chapters and adjusting title levels with the `leveloffset` directive.
